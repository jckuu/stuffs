//https://api.openweathermap.org/data/2.5/weather?q={city name}&appid=c4e43e018700d3ce7ac38a466c223aeb
//Install NuGet "Newtonsoft.Json"

//WeatherInfo Class
{
  //Weather Class (public property) - main, description, icon (strings)
  //Main Class (public property) - temp, pressure, humidity (doubles)
  //Wind Class (public property) - speed (double)
  //Sys Class (public property) - sunrise, sunset (long)
  //Root class (public property) - coord (coord), weather (list), main (main), wind (wind), sys (sys)
}

//Homepage
{
  //Add "Newtonsoft.Json" & "System.Net"
  
  string APIKey = "c4e43e018700d3ce7ac38a466c223aeb";
  
  //btnSearchClick
  {
    getWeather();
  }
  
  private void getWeather()
  {
    using (WebClient web = new WebClient())
    {
      string url = string.Format("https://api.openweathermap.org/data/2.5/weather?q={0}&appid={1}", txtbCity.Text, APIKey);
      var json = web.DownloadingString(url);
      WeatherInfo.root Info = JsonConvert.DeserializeObject<WeatherInfo.root>(json);
      picIcon.ImageLocation = "https://openweathermap.org/img/w/" + Info.weather[0].icon + ".png";
      lblCondition.Text = Info.weather[0].main;
      lblDetail.Text = Info.weather[0].description;
      lblSunset.Text = Info.sys.sunset.ToString();
      lblSunrise.Text = Info.sys.sunrise.ToString();
      lblWindspeed.Text = Info.wind.speed.ToString();
      lblPressure.Text = Info.main.pressure.ToString();
    }
  }
  DateTime convertDateTime(long millisec)
  {
    DateTime day = new DateTime(1970,1,1,0,0,0, DateTimeKind.Utc);
    day = day.AddSeconds(millisec).ToLocalTime();
    return day;
  }
}
